<html><head><meta http-equiv="Content-Language" content="en-gb"><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0"><meta name="ProgId" content="FrontPage.Editor.Document"><title>
Microsoft Research Peer-to-peer projects</title>
<style>
<!--
div.Section1
	{page:Section1;}
				.PublicationDetailDiv{padding-left:15px;}
				.TechnicalReportIDDiv {font-size:.73em;padding-top:7px;}
-->
</style>
</head>
<body bgcolor="#FFFFFF"><table border="0" width="100%" cellpadding="4" style="border-collapse: collapse" bordercolor="#111111" cellspacing="0">  <tr>    
  <td width="75%" bgcolor="#FFFFFF" bordercolor="#CCCC99" valign="top">
	<p align="left"><b><font face="Verdana" size="4" color="#800000">Microsoft 
	Research Cambridge - Peer-to-peer research related to structured overlays</font></b></p>
	<p align="left"><font face="Verdana" size="2" color="#800000">We currently 
	have a number of ongoing projects relating to structured overlays.</font></p>
	<p align="left"><b><font face="Verdana" size="4" color="#800000">Recent 
	publications: </font></b></p>
	<p><b>
	<font face="Verdana" size="2">Defending against Eclipse attacks on overlay 
	networks</font></b><font face="Verdana" size="2">
	[<a href="eclipse.ps">Postscript</a> | <a href="eclipse.pdf">
	PDF</a>]<br>Atul Singh, Miguel Castro, Peter Druschel and Antony Rowstron<br>
	SIGOPS European Workshop, Leuven, Belgium, Sept. 2004<div class="Section1">
		<p class="MsoNormal" style="MARGIN-LEFT: 0.5in">
		<font size="1"><span style="font-family: Verdana">Overlay networks are 
		widely used to deploy functionality at edge nodes without changing 
		network routers. Each node in an overlay network maintains pointers to a 
		set of neighbor nodes. These pointers are used both to maintain the 
		overlay and to implement application functionality, for example, to 
		locate content stored by overlay nodes. If an attacker controls a large 
		fraction of the neighbors of correct nodes, it can ``eclipse'' correct 
		nodes and prevent correct overlay operation. This Eclipse attack is more 
		general than the Sybil attack. Attackers can use a Sybil attack to 
		launch an Eclipse attack<br>
		by inventing a large number of seemingly distinct overlay nodes. 
		However, defenses against Sybil attacks do not prevent Eclipse attacks<br>
		because attackers may manipulate the overlay maintenance algorithm to 
		mount an Eclipse attack. This paper discusses the impact of the Eclipse 
		attack on several types of overlay and it proposes a novel defense that 
		prevents the attack by bounding the degree of overlay nodes. Our defense 
		can be applied to any overlay and it enables secure implementations of 
		overlay optimizations that choose neighbors according to metrics like 
		proximity. We present preliminary results that demonstrate the 
		importance of defending against the Eclipse attack and show that our 
		defense is effective.</span></font></div>
	</font>
	<p><b>
	<font face="Verdana" size="2"><a name="TR-Hotnets">Peer</a>-to-peer overlays: structured, 
	unstructured, or both?</font></b><font face="Verdana" size="2">
	[<a href="Structella-tr.ps">Postscript</a> | <a href="Structella-tr.pdf">
	PDF</a>]<br>Miguel Castro, 
		Manuel Costa and Antony Rowstron<br>MSR-TR-2004-73 (July 2004)<br>Extended version of 
	(<a href="#HotNets">Should we build Gnutella on a structured overlay? 
	HotNets II Paper</a>).<div class="Section1">
		<p class="MsoNormal" style="MARGIN-LEFT: 0.5in">
		<font size="1"><span style="font-family: Verdana">We compare structured 
		and unstructured overlays and derive a
		hybrid overlay that can outperform both. Unstructured overlays build a
		random graph and use flooding or random walks on that graph to
		discover data stored by overlay nodes. Structured overlays assign keys
		to data items and build a graph that maps each key to the node that
		stores the corresponding data. Unstructured overlays are widely used
		in popular applications because they can perform complex queries more
		efficiently than structured overlays. It is also commonly believed
		that structured graphs are more expensive to maintain than
		unstructured graphs and that the constraints imposed by the structure
		make it harder to exploit heterogeneity to improve scalability. This
		is not a fundamental problem. We describe techniques that exploit
		structure to achieve low maintenance overhead, and we present a
		modified proximity neighbor selection algorithm that can exploit
		heterogeneity effectively. We performed detailed comparisons of
		structured and unstructured graphs using simulations driven by
		real-world traces. Inspired by these results, we developed a hybrid
		system that uses the graph from structured overlays with the data
		placement and search strategies of unstructured overlays. The results
		show that our hybrid system supports complex queries more efficiently
		than unstructured overlays in realistic scenarios.</span></font></div>
	<p><b>
	<font face="Verdana" size="2">Performance and Dependability of structured peer-to-peer overlays</font></b><font face="Verdana" size="2">
	[<a href="dsn2004.ps">Postscript</a> | <a href="dsn2004.pdf">
	PDF</a>]<br>Miguel Castro, 
		Manuel Costa and Antony Rowstron<br>DSN-2004, Florence, Italy, (June 
	2004) (Also available as MSR-TR-2003-94 (December 2003)
	[<a href="performance_tr.ps">Postscript</a> | <a href="performance-tr.pdf">
	PDF</a>])</font><div class="Section1">
		<p class="MsoNormal" style="MARGIN-LEFT: 0.5in">
		<font face="Verdana" size="1">
		<span style="FONT-FAMILY: Verdana">Structured 
		peer-to-peer overlay networks provide a useful substrate for building 
		distributed applications. They map object keys to overlay nodes and 
		offer a primitive to send a message to the node responsible for a key. 
		They can implement, for example, distributed harsh tables and multicast 
		trees. However, there are concerns about the performance and 
		dependability of these overlays in realistic environments. Several 
		studies have shown that current peer-to-peer environments have high 
		churn rates: nodes join and leave the overlay continuously. This paper 
		presents techniques that continuously detect faults and repair the 
		overlay to achieve high dependability and good performance in realistic 
		environments. The techniques are evaluated using large-scale network 
		simulation experiments with fault injection guided by real traces of 
		node arrivals and departures. The results show that previous concerns 
		are unfounded; our techniques can achieve dependable routing in 
		realistic environments with an average delay stretch below two and 
		maintenance overhead of less than half a message per second per node.</span></font></div>
	<p><font face="Verdana" size="2"><b>PIC: Practical Internet Coordinates for Distance 
	Estimation </b>[<a href="PIC-ICDCS.ps">Postscript</a> |
	<a href="PIC-ICDCS.pdf">PDF</a>]<br>Manuel Costa, Miguel Castro, Antony Rowstron, and 
	Peter Key
	<br> ICDCS
	2004 (March 2004)</font></p>
	<blockquote>
		<p><font size="1" face="Verdana">This paper introduces PIC, a practical 
	coordinate-based mechanism to estimate Internet network distance (i.e., 
	round-trip delay or network hops). Network distance estimation is important 
	in many applications, for example, network-aware overlay construction and 
	server selection. There are several proposals for distance estimation in the 
	Internet but they all suffer from problems that limit their benefit. Most 
	rely on a small set of infrastructure nodes that are a single point of 
	failure and limit scalability.&nbsp; Others use sets of peers to compute 
	coordinates but these coordinates can be arbitrarily wrong if one of these 
	peers is malicious. While it may be reasonable to secure a small set of 
	infrastructure nodes, it is unreasonable to secure all peers. PIC addresses 
	these problems: it does not rely on infrastructure nodes and it can compute 
	accurate coordinates even when some peers are malicious. We present PIC's 
	design, experimental evaluation, and an application to network-aware overlay 
	construction and maintenance.</font></p>
		</blockquote>
	<p><b><a name="HotNets">Should we build Gnutella on a structured overlay?</a> </b>
	[<a href="Structella-HotNets.ps">Postscript</a> |
	<a href="Structella-HotNets.pdf">PDF</a>]<br>
	Miguel Castro, Manuel Costa and Antony Rowstron<br>
	HotNets-II (November 2003) (<a href="#TR-Hotnets">MSR-TR-2004-73 (July 2003) 
	is an extended version of this workshop paper.</a>)</p>
	<blockquote>
			<p><font size="1" face="Verdana">There has been much interest in both unstructured 
	and structured overlays recently. Unstructured overlays, like Gnutella, 
	build a random graph and use flooding or random walks on the graph to 
	discover data stored by overlay nodes. Structured overlays assign keys to 
	data items and build a graph that maps each key to a specific node. The 
	structure of the graph enables efficient discovery of data items given their 
	keys but it does not support complex queries.<br><br>
			Should we build Gnutella on a structured overlay? We 
	believe the answer is yes. We replaced the random graph in Gnutella by a 
	structured overlay while retaining the content placement and discovery 
	mechanisms of unstructured overlays to support complex queries. Our 
	preliminary results indicate that we can use structure to improve the 
	performance of floods and random walks. They also indicate that structure 
	can be used to reduce maintenance overhead, which is surprising because it 
	is commonly believed that unstructured overlays have lower maintenance 
	overhead than structured overlays.</font></p>
	</blockquote>
	</p>
	<p align="left">&nbsp;</td>    
  <td width="50%" bgcolor="#FFFFFF" align="center" valign="top" height="100%">
  <table border="0" cellpadding="0" cellspacing="3" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber4" height="100%">
    <tr>
      <td width="4" valign="top" bgcolor="#808000">&nbsp;</td>
      <td valign="top" align="center">
  <hr noshade size="4" color="#808000">    
      <p>
      <b><font face="Verdana" size="4" color="#800000"><a href="http://research.microsoft.com"><img src="/images/MSR_logo.gif" border="0"></a>
      </font></b></p>
  <hr noshade size="4" color="#808000">    
      <p>
      <b><font face="Verdana" size="4" color="#800000">Links to other projects:</font></b></p>
	<p>
      <font face="Verdana" size="4"> <b> 
      <a href="http://rowstron.azurewebsites.net/Pastry">Pastry</a></b></font></p>
      <p>
  <b><font face="Verdana" size="4">
	<a href="http://rowstron.azurewebsites.net/SplitStream">SplitStream</a></font></b></p>
	<p>
  <b><font face="Verdana" size="4">
	<a href="http://rowstron.azurewebsites.net/Scribe">Scribe</a></font></b><br>
  <br>
  <b><font face="Verdana" size="4">
	<a href="http://rowstron.azurewebsites.net/Squirrel">Squirrel</a></font></b></p>
	<p>
  <b><font face="Verdana" size="4">
	<a href="http://rowstron.azurewebsites.net/PAST">PAST</a></font></b><br>
  &nbsp;</p>
  <hr noshade size="4" color="#808000">    
      <p><b><font face="Verdana" size="4" color="#800000">Software 
	distribution:</font></b></p>
	<p align="left"><font face="Verdana" size="2" color="#800000">We are able to 
	licence the C# source code for our simulator, stand-alone run-time, Pastry 
	(MS Pastry), SplitStream, Squirrel and Scribe 
	implementations to academic institutions. If you are a bona fide academic 
	institution and would like to licence to code base then please contact us 
	directly.</font></p>
  <hr noshade size="4" color="#808000">    
      <p><b><font face="Verdana" size="4" color="#800000">Summer 2005 
		internships:</font></b></p>
	<p align="left"><font face="Verdana" size="2" color="#800000">We will be 
	seeking internship applications for 2005 in December/January 2005.</font></p>
  <hr noshade size="4" color="#808000">    
      </td>
      <td width="4" valign="top" align="center" bgcolor="#808000">&nbsp;</td>
      </tr>
    </table>
  </td>  </tr>  <tr>    <td width="80%" bgcolor="#FFFFFF" colspan="2">   <hr noshade size="4" color="#808000">    </td>  </tr>  </table><p align="center"><b><font face="Verdana" size="1">
[Page last updated 9th January 2004 - maintained by <a href="mailto:antr@microsoft.com">mailto:antr@microsoft.com</a>]</font></b><br><br>&nbsp;</body>
